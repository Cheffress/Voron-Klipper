#####################################################################
#   Macros
#####################################################################

# Enable object exclusion
[exclude_object]

## removed for OrcaSlicer
##[gcode_macro M204]
##rename_existing: M204.1
##gcode:
##    # Parameters
##    {% set ACCEL = params.S|int %}
##	SET_VELOCITY_LIMIT ACCEL={ACCEL} ACCEL_TO_DECEL={ACCEL/2}

[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: _QUAD_GANTRY_LEVEL
description: Conform a moving, twistable gantry to the shape of a stationary bed with LED Automation
gcode:
    M117 Quad Leveling
    STATUS_LEVELING
    G90
    M204 S10000
    _QUAD_GANTRY_LEVEL {% for p in params
            %}{'%s=%s ' % (p, params[p])}{%
            endfor %}
    STATUS_READY

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: _BED_MESH_CALIBRATE
description: Perform Mesh Bed Leveling with LED Automation
gcode:    
    M117 Creating New Mesh
    STATUS_MESHING
    G90
    M204 S10000
    _BED_MESH_CALIBRATE {% for p in params
           %}{'%s=%s ' % (p, params[p])}{%
          endfor %}
    STATUS_READY

[gcode_macro G28]
rename_existing: G28.1
description: Perform Homing with LED Automation
gcode:
    M117 Homing
    STATUS_HOMING
    G90
    M204 S10000
    G28.1 {% for p in params
           %}{'%s=%s ' % (p, params[p])}{%
          endfor %}
    STATUS_READY

[gcode_macro QGL]
gcode:
    QUAD_GANTRY_LEVEL

[gcode_macro CQGL]
gcode:
    {% if printer.configfile.settings.quad_gantry_level %}
        {% if printer.quad_gantry_level.applied == False %}
            BED_MESH_CLEAR
            G90
            CG28
            M204 S10000
            QGL
        {% endif %}
    {% endif %}

# Conditional G28 (home if not already homed)
[gcode_macro CG28]
gcode:
    {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes or "z" not in printer.toolhead.homed_axes %}
        M117 Homing
        STATUS_HOMING
        M204 S10000
        G28
        STATUS_READY
    {% endif %}

[gcode_macro BED_MESH_LOAD]
description: Load an existing mesh or generate a new one
gcode:
  ##### get target temperature #####
  {% set bed_temp = printer.heater_bed.target|int %}
  ##### join everything to a single mesh name #####
  {% set mesh_name = "Bed_Temp-" + bed_temp|string + "C" %}
  ##### end of definitions #####
  {% if printer.configfile.config["bed_mesh " + mesh_name] is defined %}
    M117 Loading stored mesh
    BED_MESH_CLEAR
    BED_MESH_PROFILE LOAD={mesh_name}
  {% else %}
    NEW_MESH
    {action_respond_info("Run SAVE_CONFIG after the print to store the mesh")}
  {% endif %}

[gcode_macro NEW_MESH]
description: Create new bed mesh at current target bed temperature target
gcode:
 ##### get target get temperature #####
  {% set bed_temp = printer.heater_bed.target|int %}
  {% set mesh_name = "Bed_Temp-" + bed_temp|string + "C" %}
  
  M117 New mesh - bed temp
  STATUS_HEATING
  M190 S{bed_temp}

  DYNAMIC_HEATSOAK

  CQGL
  
  BED_MESH_CALIBRATE PROFILE={mesh_name}
  M117 Saving Bed Mesh {mesh_name}
  SAVE_CONFIG
  STATUS_READY

[gcode_macro DYNAMIC_HEATSOAK]
variable_degrees_per_minute_wait: 18
variable_fixed_wait: 3
;variable_degrees_per_minute_wait: 100
;variable_fixed_wait: 0

gcode:
  {% set BED_TEMP = params.BED|default(60)|float %}
  {% set HEATSOAK_MINS = fixed_wait+(BED_TEMP/degrees_per_minute_wait)|round(0,'ceil')|int %}

  STATUS_BUSY
  {% for i in range(HEATSOAK_MINS) %}
    {% set REMAINING_MINS = (HEATSOAK_MINS-i)|int %}
    M117 Heatsoak {REMAINING_MINS}mins...
    G4 P60000
  {% endfor %}
  STATUS_READY

[gcode_macro PRINT_START]
variable_start_x: 135
variable_start_y: 304
variable_start_z: 4
; Slicer setup - Added to Start Code
; print_start EXTRUDER={first_layer_temperature[initial_extruder] + extruder_temperature_offset[initial_extruder]} BED=[first_layer_bed_temperature] CHAMBER=[chamber_temperature]
gcode:
  {% set BED_TEMP = params.BED|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER|default(190)|float %}
  {% set X_WAIT = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set Y_WAIT = printer.toolhead.axis_maximum.y|float / 2 %}

  SET_NOZZLE_LEDS_ON

  G21 ; set units to millimeters
  G90 ; use absolute coordinates
  M83 ; use relative distances for extrusion

  CG28 ; home all axes

  Z_SET_PEA ; set z offset for PEA sheet - Not required for hard or thin surfaces

  M117 Preheating
  STATUS_HEATING
  M104 S150 ; set extruder temp and return control to host
  M140 S{BED_TEMP} ; set bed temp and return control to host
  NEOPIXEL_DISPLAY LED=chamber TYPE=bed_temp MODE=highlight

  M117 Waiting bed temp
  STATUS_HEATING
  M190 S{BED_TEMP} ; set bed temp and wait
  
  DYNAMIC_HEATSOAK

  CLEAN_NOZZLE

  QGL
  
  M117 Re-calibrate Z
  STATUS_CALIBRATING_Z
  G28 Z

  BED_MESH_LOAD

  M117 Wait extruder temp
  STATUS_HEATING
  ;Move to off the bed at this point
  G1 X{start_x} Y{start_y} F6000
  G1 Z{start_z} F1500
  NEOPIXEL_DISPLAY LED=chamber TYPE=extruder_temp MODE=highlight
  M109 S{EXTRUDER_TEMP} ; set extruder temp and wait
  
  SET_FAN_SPEED FAN=Nevermore SPEED=0.8 ; set nevermore fan on

  CLEAN_NOZZLE

  STATUS_BUSY
  M117 Printing...
  
  ; Want it to go straight to it's starting location
  ;G1 X{X_WAIT} Y{Y_WAIT} Z15 F9000                    # Goes to center of the bed
  
  M82 ; set absolute distance for extrusion

  NEOPIXEL_DISPLAY LED=chamber TYPE=print_percent MODE=highlight

[gcode_macro PRINT_END]
variable_start_x: 135
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 10, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    
    G0 X{start_x} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    
    BED_MESH_CLEAR

    UPDATE_DELAYED_GCODE ID=filter_off DURATION=180 ; turn nevermore filter off after delay

    M84
    M117 That's All Folks
    STATUS_OFF
    SET_NOZZLE_LEDS_OFF
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro CLEAN_NOZZLE]
variable_start_x: 135
variable_start_y: 304
variable_start_z: 4
variable_wipe_dist: -50
variable_wipe_qty: 6
variable_wipe_spd: 200
variable_default_raise_distance: 10

gcode:
  ## Get the current z position so that it returns to that height after cleaning.  Saves printhead crashing into printed structure if mid print
  {% set current_z = printer.toolhead.position.z %}
  {% set target_z = current_z if current_z > default_raise_distance else default_raise_distance %}

  {% if "xyz" not in printer.toolhead.homed_axes %}
    STATUS_HOMING
    G28
  {% endif %}
  
  G90                                            ; absolute positioning
  ## Move nozzle to start position
  M117 Cleaning Nozzle
  STATUS_CLEANING
  G1 X{start_x} Y{start_y} F6000
  G1 Z{start_z} F1500

  ## Wipe nozzle
  {% for wipes in range(1, (wipe_qty + 1)) %}
    G1 X{start_x + wipe_dist} F{wipe_spd * 60}
    G1 X{start_x} F{wipe_spd * 60}
  {% endfor %}

  ## Raise nozzle
  
  G1 Z{target_z}
  STATUS_READY

[gcode_macro DARK_MODE]
gcode:
  ## chamber lights
  NEOPIXEL_DISPLAY LED=chamber TYPE=clear MODE=anything
  ## Logo lights

  ## Nozzle lights
  STATUS_OFF

[gcode_macro Z_SET_PEA]
gcode:
    CG28
    ;SET_GCODE_OFFSET Z=-0.03
    SET_GCODE_OFFSET Z=0.00

[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.01 MOVE=1

[gcode_macro ZDOWN]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1